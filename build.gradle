buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = "jitpack"
            url = "https://jitpack.io/"
        }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://repo.sk1er.club/repository/maven-public" }
    }
    dependencies {
        classpath "com.github.asbyth:ForgeGradle:6f53277"
        classpath "com.github.jengelman.gradle.plugins:shadow:6.1.0"
        classpath "com.github.xcfrg:MixinGradle:0.6-SNAPSHOT"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.0-RC"
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "kotlin"
apply plugin: 'org.spongepowered.mixin'


version = "1.0.0"
group = "me.jonildev.client"
archivesBaseName = "Joniliesh"


sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding = 'UTF-8'

sourceSets {
    main {
        output.resourcesDir = java.outputDir
    }
    test {
        java {
            srcDirs = ["src/test"]
        }
    }
}

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false
    replace "@VERSION@": project.version

    clientRunArgs += "--mixin mixins.base.json"
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

repositories {
    mavenCentral()
    maven { url = "https://repo.sk1er.club/repository/maven-public/" }
    maven { url = "https://jitpack.io/" }
    maven { url = "https://repo.spongepowered.org/repository/maven-public/" }
}

dependencies {
    implementation('org.spongepowered:mixin:0.7.11-SNAPSHOT')
    annotationProcessor('org.spongepowered:mixin:0.7.11-SNAPSHOT')
    implementation 'net.objecthunter:exp4j:0.4.8'
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-gradle-plugin', version: '1.8.20'
    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    testCompileOnly 'org.projectlombok:lombok:1.18.26'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

mixin {
    add sourceSets.main, "mixins.base.refmap.json"
    defaultObfuscationEnv searge
}

jar {
    manifest {
        attributes(
                "FMLCorePluginContainsFMLMod" : true,
                "FMLCorePlugin" : "me.jonildev.client.mixins.MixinLoader",
                "ForceLoadAsMod": true,
                "ModSide": "CLIENT",
                "TweakOrder": "0",
                "MixinConfigs": "mixins.base.json"
        )
    }
}

shadowJar {

    dependencies {
        include(dependency("net.objecthunter:exp4j:0.4.8"))
    }
    archiveFileName = "bin.jar"
}

reobfJar.dependsOn tasks.shadowJar

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    from(file("LICENSE"))
}

reobf {
    shadowJar {
        classpath = sourceSets.main.compileClasspath
        mappingType = 'SEARGE'
    }
}

sourceSets { main { output.resourcesDir = java.classesDirectory } }

test {
    useJUnitPlatform()
}